name: Enterprise-app CI/CD

on:
  push:
    branches: ["master"]
    paths:
      - "**.cs"
      - "**.json"
      - "**.csproj"
      - "**.proto"
      - "**Dockerfile"
      - "**.yaml"
      - "**.yml"

# env:
#   PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
#   GAR_LOCATION: europe-west1
#   GKE_CLUSTER: gke-google-cloud
#   GKE_ZONE: europe-west1-c

jobs:
  # build:
  # runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: 7.x

  #     - name: Build
  #       run: |
  #         dotnet build Enterprise-architecture.sln

  # test:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: 7.x

  #     - name: Test
  #       run: |
  #         dotnet test Enterprise-architecture.sln

  # docker_build_push:
  #   runs-on: ubuntu-20.04
  #   needs: test
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set Docker credentials
  #       run: |
  #         echo "DOCKER_USER=$DOCKER_USER" >> $GITHUB_ENV
  #         echo "DOCKER_SECRET=$DOCKER_SECRET" >> $GITHUB_ENV
  #       env:
  #         DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #         DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}

  #     - name: Replace CONNECTION_STRING
  #       run: |
  #         SECRET_VALUE="${{ secrets.CONNECTION_STRING }}"
  #         ESCAPED_SECRET_VALUE=$(echo "${SECRET_VALUE}" | sed 's/&/\\&/g')
  #         sed -i "s|\"PlatformDBConnection\": \"\"|\"PlatformDBConnection\": \"${ESCAPED_SECRET_VALUE}\"|" ./PlatformService/appsettings.Production.json
  #       shell: bash

  #     - name: Build and push images
  #       run: |
  #         docker build -t $DOCKER_USER/platform-service-amd64:v1 ./PlatformService
  #         docker build -t $DOCKER_USER/command-service-amd64:v1 ./CommandsService
  #         echo "$DOCKER_SECRET" | docker login -u $DOCKER_USER --password-stdin
  #         docker push $DOCKER_USER/platform-service-amd64:v1
  #         docker push $DOCKER_USER/command-service-amd64:v1
  #       env:
  #         DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #         DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}

  kubernetes:
    runs-on: ubuntu-latest
    # needs: docker_build_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GKE_PROJECT_ID }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_CREDENTIALS }}
          install_components: "gke-gcloud-auth-plugin"
          export_default_credentials: true

      - name: deploy to gke
        env:
          GKE_PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
        run: |
          gcloud container clusters get-credentials gke-google-cloud --region europe-west1
          kubectl config get-contexts
