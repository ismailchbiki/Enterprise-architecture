name: Enterprise-app CI/CD

on:
  push:
    branches: ["master"]
    paths:
      - "**.cs"
      - "**.json"
      - "**.csproj"
      - "**.proto"
      - "**Dockerfile"
      - "**.yaml"
      - "**.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: Build
        run: |
          dotnet build Enterprise-architecture.sln

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: Test
        run: |
          dotnet test Enterprise-architecture.sln

  docker_build_push:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Docker credentials
        run: |
          echo "DOCKER_USER=$DOCKER_USER" >> $GITHUB_ENV
          echo "DOCKER_SECRET=$DOCKER_SECRET" >> $GITHUB_ENV
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}

      - name: Replace CONNECTION_STRING
        run: |
          SECRET_VALUE="${{ secrets.CONNECTION_STRING }}"
          ESCAPED_SECRET_VALUE=$(echo "${SECRET_VALUE}" | sed 's/&/\\&/g')
          sed -i "s|\"PlatformDBConnection\": \"\"|\"PlatformDBConnection\": \"${ESCAPED_SECRET_VALUE}\"|" ./PlatformService/appsettings.Production.json
        shell: bash

      - name: Build and push images
        run: |
          docker build -t $DOCKER_USER/platform-service-amd64:v1 ./PlatformService
          docker build -t $DOCKER_USER/command-service-amd64:v1 ./CommandsService
          echo "$DOCKER_SECRET" | docker login -u $DOCKER_USER --password-stdin
          docker push $DOCKER_USER/platform-service-amd64:v1
          docker push $DOCKER_USER/command-service-amd64:v1
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}

  kubernetes:
    runs-on: ubuntu-latest
    needs: docker_build_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - name: List available contexts
        run: kubectl config get-contexts

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG_DATA }}" > kubeconfig.yaml
          kubectl config view --raw > kubeconfig-merged.yaml
      #     KUBECONFIG=kubeconfig-merged.yaml kubectl config use-context gke_gothic-sequence-404223_europe-west1_gke-google-cloud

      # # Deploy the three services
      # - name: Deploy command-depl
      #   run: kubectl apply -f K8S/command-depl.yaml

      # - name: Deploy platform-depl
      #   run: kubectl apply -f K8S/platform-depl.yaml

      # - name: Deploy rabbitmq-depl
      #   run: kubectl apply -f K8S/rabbitmq-depl.yaml

      # # Optionally, check the status of the deployments
      # - name: Check deployment status
      #   run: |
      #     kubectl rollout status deployment/platform-depl
      #     kubectl rollout status deployment/command-depl
      #     kubectl rollout status deployment/rabbitmq-depl
      #     # kubectl rollout restart deployment platform-depl
      #     # kubectl rollout restart deployment command-depl
      #     # kubectl rollout restart deployment rabbitmq-depl
